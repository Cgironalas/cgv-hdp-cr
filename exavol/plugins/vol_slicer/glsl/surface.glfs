#version 150 compatibility

// diffuse texture map
uniform sampler3D diffuse_map;
// whether to use the diffuse map
uniform int diffuse_mapping;
///
uniform bool two_sided = false;
uniform bool illumination = true;

uniform float texture_gamma = 1.0;
uniform float texture_scale = 1.0;

in vec3 normal;
in vec3 position;
in vec3 texcoord;
in vec4 color;

vec4 doLighting(vec3 position, vec3 normal, vec4 diffuseMaterial);

void main()
{
	vec4 diff;
	switch (diffuse_mapping) {
	case 0: diff = gl_FrontMaterial.diffuse; break;
	case 1: diff = color; break;
	case 2: diff = pow(texture_scale*texture(diffuse_map, texcoord), vec4(texture_gamma, texture_gamma, texture_gamma, texture_gamma)); break;
	case 3: diff = vec4(0.5*normal + vec3(0.5, 0.5, 0.5),1.0); break;
	case 4: diff = vec4(texcoord,1.0); break;
	case 5: diff = vec4(position,1.0); break;
	}
	vec3 nml = normal;
	if (two_sided) {
		if (dot(position, nml) > 0.0) {
			nml = -nml;
		}
	}
	if (illumination) {
		gl_FragColor = doLighting(position, nml, diff);
		gl_FragColor.a = diff.a;
	}
	else {
		gl_FragColor = diff;
	}
}